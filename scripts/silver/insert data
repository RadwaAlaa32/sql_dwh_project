------load  data into silver.crm_cust_info ----------
create or alter procedure silver.load_silver as
begin
print '===========================================';
print 'loading silver layer';
print'=============================================';
declare @start_time  datetime ,@end_time datetime,@batch_start_time datetime ,@batch_end_time datetime;
begin try 
set @batch_start_time=getdate();
set @start_time =getdate();
truncate table silver.crm_cust_info
print 'isert data into crm_cust_info';
insert into silver.crm_cust_info(
cst_id,
cst_key,
cst_firstname,
cst_lastname,
cst_material_status,
cst_gndr,
cst_create_date)

select 
cst_id,
cst_key,
TRIM(cst_firstname)as cst_firstname,
TRIM(cst_lastname)as lastname,
case when UPPER ( TRIM(cst_material_status )) ='S' then 'Single'
     when UPPER ( TRIM(cst_material_status))= 'M' THEN 'Maried'
	 else 'n/a'
end cst_marital_statues,
case when UPPER ( TRIM( cst_gndr)) ='F' then 'famale'
     when UPPER ( TRIM( cst_gndr))= 'M' THEN 'Male'
	 else 'n/a'
end cst_gndr,
cst_create_date
from(
select *,
ROW_NUMBER()over(partition by cst_id order by cst_create_date desc) as flag_last
from bronze.crm_cust_info
where cst_id is not null
) t where flag_last=1

set @end_time=getdate();
print '>>Load Duration:'+cast (datediff(second,@start_time,@end_time)as nvarchar)+ 'seconds';
print '---------------------------------------';

------------load the date into crm_prd_info----------
PRINT 'load data into crm_prd_info';
set @start_time=getdate();
truncate table silver.crm_prd_info
insert into silver.crm_prd_info(
prd_id,
cat_id,
prd_key,
prd_nm,
prd_cost,
prd_line,
prd_star_dt,
prd_end_dt
)
select 
prd_id,
REPLACE( SUBSTRING(prd_key,1,5),'-','_') as cat_id,
SUBSTRING (prd_key,7,LEN(prd_key)) as prd_key,
prd_nm,
ISNULL( prd_cost,0) as prd_cost,

case when UPPER(TRIM(prd_line)) ='M' then 'Mountrain' 
     when UPPER(TRIM(prd_line)) ='R' then 'Road' 
	 when UPPER(TRIM(prd_line)) ='S' then 'Other Sales' 
	 when UPPER(TRIM(prd_line)) ='T' then 'Touring' 
	 else 'n/a'
end prd_line,
CAST( prd_star_dt as date) as prd_start_dt,
CAST( LEAD( prd_star_dt) over (partition by prd_key order by prd_star_dt) -1 as date) as prd_end_dt
from bronze.crm_prd_info
set @end_time=getdate();
print '>>Load Duration:'+cast (datediff(second,@start_time,@end_time)as nvarchar)+ 'seconds';
print '---------------------------------------';

---------------load the data into bronze.crm_sales_details----------
PRINT 'load data into crm_sales_details';
set @start_time=getdate()
truncate table silver.crm_sales_details
insert into silver.crm_sales_details(
sls_ord_num,
sls_prd_key,
sls_cust_id,
sls_order_dt,
sls_ship_dt,
sls_due_dt,
sls_sales_dt,
sls_quantity,
sls_price
)
select 
sls_ord_num,
sls_prd_key,
sls_cust_id,
case when sls_order_dt=0 or LEN( sls_order_dt) !=8 then null
     else CAST( CAST( sls_order_dt AS varchar)AS date)
END AS  sls_order_dt,

case when sls_ship_dt=0 or LEN( sls_ship_dt) !=8 then null
     else CAST( CAST( sls_ship_dt AS varchar)AS date)
END AS  sls_ship_dt,
case when sls_due_dt=0 or LEN(sls_due_dt) !=8 then null
     else CAST( CAST( sls_due_dt AS varchar)AS date)
END AS  sls_due_dt,
case when  sls_sales_dt  IS NULL  or sls_sales_dt <=0 or sls_sales_dt!= sls_quantity* ABS( sls_price)
    then sls_quantity* ABS( sls_price)
else sls_sales_dt
end as  sls_sales_dt,
sls_quantity,
case when sls_price IS NULL or sls_price<=0
      then sls_sales_dt/ NULLIF ( sls_quantity,0)
else sls_price
end as sls_price
from bronze.crm_sales_details
set @end_time=getdate();
print '>>Load Duration:'+cast (datediff(second,@start_time,@end_time)as nvarchar)+ 'seconds';
print '---------------------------------------';

-----------load data into bronze.erp_cust_az12-------
PRINT 'load data into erp_cust_az12';
set @start_time =getdate()
truncate table silver.erp_cust_az12
insert into silver.erp_cust_az12(
cid,
bdate, 
gen
)
SELECT 
CASE WHEN cid like 'NAS%' THEN SUBSTRING (cid,4,len (cid))
     ELSE cid
END cid,
case when bdate> GETDATE() then null
     else bdate
end as bdate,
case when UPPER (TRIM(gen)) IN('F','Famale') THEN 'Famale'
     when UPPER (TRIM(gen)) IN('M','Male') THEN 'Male' 
   else 'n/a'
end as gen
FROM bronze.erp_cust_az12
set @end_time=getdate();
print '>>Load Duration:'+cast (datediff(second,@start_time,@end_time)as nvarchar)+ 'seconds';
print '---------------------------------------';

------------load data into bronze.erp_loc_a101-----
PRINT 'load data into erp_loc_a101';
set @start_time =getdate()
truncate table silver.erp_loc_a101
insert into silver.erp_loc_a101(
cid,
cntry
)
select 
replace (cid,'-',''),
case when TRIM(cntry)= 'DE' THEN 'Germany'
    when TRIM(cntry) IN ('US','USA') THEN 'United State'
    when TRIM(cntry) =' ' or cntry is null then 'n/a'
	else TRIM(cntry)
end as cntry
from bronze.erp_loc_a101
set @end_time=getdate();
print '>>Load Duration:'+cast (datediff(second,@start_time,@end_time)as nvarchar)+ 'seconds';
print '---------------------------------------';

-----------load data into bronze.erp_px_cat_glv2--------------
PRINT 'load data into erp_px_cat_glv2';
set @start_time=getdate()
truncate table silver.erp_px_cat_glv2
insert into silver.erp_px_cat_glv2(
id, 
cat,
subcat,
maintamce
)
select 
id,
cat,
subcat,
maintamce
from bronze.erp_px_cat_glv2
set @end_time=getdate();
print '>>Load Duration:'+cast (datediff(second,@start_time,@end_time)as nvarchar)+ 'seconds';
print '---------------------------------------';
print '>>Load Duration:'+cast (datediff(second,@start_time,@end_time)as nvarchar)+ 'seconds';	
print '---------------------------------------';
set @batch_end_time=getdate();
print '===============================================';
print 'Loading Silver layer complete '
print'total load duration:'+cast (datediff(second,@batch_start_time,@batch_end_time)as nvarchar)+ 'seconds';



print '===============================================';
end try
begin catch
print '=============================================';
print 'ERROR OCCURED DURING LOADING Silver LAYER';
print 'Error Message'+ERROR_MESSAGE();
print 'ErrorNumber'+cast( ERROR_Number()as nvarchar);
print '=============================================';


end catch

end

